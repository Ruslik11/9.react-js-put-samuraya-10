{"version":3,"file":"static/js/208.82dc02df.chunk.js","mappings":"kKACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCajN,EAVmB,SAACA,GAClB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACE,0BACE,SAAC,KAAD,CAASC,GAAIF,EAAMG,gBAAiBC,EAAUC,UAAWD,EAAzD,SAAoEL,EAAMO,UCAhF,EANgB,SAACP,GACf,OACE,gBAAKM,UAAWD,EAAhB,SAA4BL,EAAMQ,W,uCCAhCC,GAAcC,EAAAA,EAAAA,GAAiB,IAoBxBC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAlBZ,SAACZ,GACpB,OACI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CACIC,SAAU,CAACC,EAAAA,EAAUT,GACrBU,UAAWC,EAAAA,GACXb,KAAK,iBACLc,YAAY,0BAGpB,0BACI,6CCWhB,EAxBgB,SAACrB,GACf,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAuBpB,KAAMoB,EAAEpB,KAAML,GAAIyB,EAAEzB,IAA1ByB,EAAEzB,OAC7D0B,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAoBtB,QAASsB,EAAEtB,SAAjBsB,EAAE5B,OAMhE,OACE,iBAAKI,UAAWD,EAAhB,WACE,gBAAKC,UAAWD,EAAhB,SACGmB,KAEH,iBAAKlB,UAAWD,EAAhB,WACE,yBAAMuB,KACN,SAACjB,EAAD,CAAqBG,SAXP,SAACiB,GACnB/B,EAAMgC,YAAYD,EAAOE,0B,oBCM7B,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACb,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAGE,SAACa,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,GAASC,EAAAA,EAAAA,GAAmBJ,SAO9BK,EAAAA,EAFJ,CAGEC,I,iJCjBEC,EAA6B,SAAClB,GAAD,MAAY,CACzCmB,OAAQnB,EAAMoB,KAAKD,SAGVH,EAAmB,SAACK,GAAe,IACxCC,EADuC,0IAEzC,WACI,OAAKC,KAAK7C,MAAMyC,QACT,SAACE,GAAD,UAAeE,KAAK7C,SADI,SAAC,KAAD,CAAUG,GAAG,eAHP,GACb2C,EAAAA,WAShC,OAFqCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS","sources":["webpack://Project/./src/components/Dialogs/Dialogs.module.scss?d037","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__wO9m5\",\"dialogsItems\":\"Dialogs_dialogsItems__pvHnb\",\"dialog\":\"Dialogs_dialog__Tpbtt\",\"active\":\"Dialogs_active__OZfWz\",\"messages\":\"Dialogs_messages__-DV-X\",\"message\":\"Dialogs_message__5wf9k\"};","import React from 'react';\r\nimport s from '../Dialogs.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  const path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div>\r\n      <NavLink to={path} activeClassName={s.active} className={s.dialog}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.scss'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n};\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    validate={[required, maxLength50]}\r\n                    component={Textarea}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your message\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.scss'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map( d => <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n  let messagesElements = state.messages.map( m => <Message key={m.id} message={m.message} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n      render() {\r\n          if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n          return <Component {...this.props} />\r\n      }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};"],"names":["props","path","id","to","activeClassName","s","className","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}